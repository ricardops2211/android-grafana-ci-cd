name: "Loki Port-Forward"
description: "Port-forward al Pod de Loki en 3100 con healthcheck"
inputs:
  namespace:
    description: "Namespace de Loki"
    required: true
    default: "observability"
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        set -euo pipefail
        NS="${{ inputs.namespace }}"

        echo "Buscando pods de Loki (label app.kubernetes.io/name=loki)..."
        for i in {1..60}; do
          CNT=$(kubectl -n "$NS" get po -l app.kubernetes.io/name=loki --no-headers 2>/dev/null | wc -l || echo 0)
          if [ "$CNT" -gt 0 ]; then break; fi
          sleep 3
        done

        if [ "${CNT:-0}" -eq 0 ]; then
          echo "ERROR: No hay pods 'loki' en $NS tras 180s (ignorando canary)."
          kubectl -n "$NS" get all || true
          exit 1
        fi

        echo "Esperando Ready del pod 'loki' (mÃ¡x 300s)..."
        kubectl -n "$NS" wait --for=condition=Ready --timeout=300s pod -l app.kubernetes.io/name=loki

        POD="$(kubectl -n "$NS" get pod -l app.kubernetes.io/name=loki -o jsonpath='{.items[0].metadata.name}')"
        echo "Usaremos el pod: $POD"

        kubectl -n "$NS" port-forward pod/"$POD" 3100:3100 >/tmp/pf.log 2>&1 &
        echo $! > /tmp/pf.pid

        echo "Chequeando http://127.0.0.1:3100/ready ..."
        for i in {1..60}; do
          if curl -fsS http://127.0.0.1:3100/ready >/dev/null; then
            echo "Loki READY en local"
            break
          fi
          if ! ps -p "$(cat /tmp/pf.pid)" >/dev/null 2>&1; then
            echo "ERROR: port-forward se detuvo. Logs:"
            sed -n '1,200p' /tmp/pf.log || true
            exit 1
          fi
          sleep 2
        done
        curl -fsS http://127.0.0.1:3100/metrics >/dev/null || true

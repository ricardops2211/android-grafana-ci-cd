name: bootstrap-kind
on:
  workflow_dispatch:
    inputs:
      grafana_host_port:
        description: "Puerto HOST para Grafana (mapea NodePort 30000)"
        required: true
        default: "3030"

jobs:
  bootstrap:
    runs-on: self-hosted
    env:
      CLUSTER_NAME: sre-demo
      GRAFANA_NODEPORT: 30000
    steps:
      - uses: actions/checkout@v4

      - name: Crear config de kind
        shell: bash
        run: |
          mkdir -p ops
          cat > ops/kind-config.yaml <<EOF
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
          - role: control-plane
            extraPortMappings:
              - containerPort: ${GRAFANA_NODEPORT}
                hostPort: ${{ github.event.inputs.grafana_host_port }}
                listenAddress: "0.0.0.0"
                protocol: TCP
          EOF
          cat ops/kind-config.yaml

      - name: (Re)crear cluster kind
        shell: bash
        run: |
          kind delete cluster --name "$CLUSTER_NAME" || true
          kind create cluster --name "$CLUSTER_NAME" --config ops/kind-config.yaml
          kind export kubeconfig --name "$CLUSTER_NAME"
          kubectl --context kind-$CLUSTER_NAME get nodes -o wide

      - name: Construir imagen y cargar en kind
        shell: bash
        run: |
          docker build -t api-demo:local ./app
          kind load docker-image api-demo:local --name "$CLUSTER_NAME"

      - name: Namespaces base
        shell: bash
        run: |
          kubectl --context kind-$CLUSTER_NAME create ns sre-demo 2>/dev/null || true
          kubectl --context kind-$CLUSTER_NAME create ns observability 2>/dev/null || true
          kubectl --context kind-$CLUSTER_NAME create ns monitoring 2>/dev/null || true

      - name: Export kubeconfig b64
        id: kcfg
        shell: bash
        run: |
          b64=$(base64 -w0 < "$HOME/.kube/config")
          echo "kubeconfig_b64=$b64" >> "$GITHUB_OUTPUT"

      - name: Nota
        run: |
          echo "::notice title=Listo::Crea el Secret 'KUBECONFIG_B64' con el valor de steps.kcfg.outputs.kubeconfig_b64. Grafana en http://localhost:${{ github.event.inputs.grafana_host_port }}"

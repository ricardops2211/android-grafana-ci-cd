name: SRE-MTTR-Lab (Grafana Cloud)
on:
  push:
    branches: [ "nuevo-sre-richie" ]

jobs:
  lab:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      GC_PROM_URL: ${{ secrets.GC_PROM_URL }}
      GC_LOKI_URL: ${{ secrets.GC_LOKI_URL }}
      GC_LOKI_USERNAME: ${{ secrets.GC_LOKI_USERNAME }}
      GC_LOKI_PASSWORD: ${{ secrets.GC_LOKI_PASSWORD }}

    steps:
      - uses: actions/checkout@v4

      # instalar kind/kubectl/helm (igual que antes) y crear cluster Kind…

      - name: Namespaces
        run: |
          kubectl create ns monitoring || true
          kubectl create ns demo-app || true

      - name: Secret credenciales Grafana Cloud (Prometheus)
        run: |
          kubectl -n monitoring delete secret grafana-cloud-metrics || true
          kubectl -n monitoring create secret generic grafana-cloud-metrics \
            --from-literal=username='${{ secrets.GC_PROM_USERNAME }}' \
            --from-literal=password='${{ secrets.GC_PROM_PASSWORD }}'

      - name: Agregar repos Helm
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Instalar kube-prometheus-stack (con remote_write)
        run: |
          # Sustituimos variables dentro del values con envsubst (sólo URL)
          envsubst < infra/helm/values-prom.yaml > /tmp/values-prom.evaluated.yaml
          helm upgrade --install monitoring prometheus-community/kube-prometheus-stack \
            -n monitoring -f /tmp/values-prom.evaluated.yaml \
            --wait --timeout 15m

      - name: Instalar Promtail apuntando a Grafana Cloud Loki
        run: |
          envsubst < infra/helm/values-loki.yaml > /tmp/values-loki.evaluated.yaml
          helm upgrade --install loki grafana/loki-stack \
            -n monitoring -f /tmp/values-loki.evaluated.yaml \
            --set loki.enabled=false \
            --wait --timeout 10m

      - name: Desplegar app y reglas/alertas
        run: |
          kubectl apply -f k8s/app/podinfo.yaml
          kubectl apply -f k8s/alerts/mttr-recording-rules.yaml

      - name: Inyectar incidente y medir MTTR (publica en Loki Cloud)
        env:
          GC_LOKI_URL: ${{ secrets.GC_LOKI_URL }}
          GC_LOKI_USERNAME: ${{ secrets.GC_LOKI_USERNAME }}
          GC_LOKI_PASSWORD: ${{ secrets.GC_LOKI_PASSWORD }}
        run: |
          chmod +x scripts/*.sh
          ./scripts/incident_inject.sh
          ./scripts/measure_mttr.sh
